---
# Ansible Playbook to upgrade Cisco IOS 
- name: Upgrade CISCO IOS 
  hosts: 192.168.99.53
  vars: 
    upgrade_ios_version: "17.13.01"

  tasks:
    - name: CHECK CURRENT VERSION
      ios_facts:

    - debug: 
        msg: 
        - "Current version is {{ ansible_net_version }}"
        - "Upgrade image is {{ upgrade_ios_version }}"

    - debug: 
        msg: 
        - "Image is not compliant and will be upgraded"
      when: ansible_net_version != upgrade_ios_version

## Create backup folder for today 
- name: Create backup directory
  hosts: localhost
  gather_facts: yes
  tasks:
    - name: Store DTG as fact
      set_fact:
        DTG: "{{ ansible_date_time.date }}"

    - name: Create backup directory
      file:
        path: "~/IOS/backups/{{ DTG }}"
        state: directory
      run_once: true

## Backup Running Config 
- name: Backup Running Config 
  hosts: 192.168.99.53 
  tasks:
    - name: Backup Running Config  
      ios_command:
        commands: 
          - show run  
      register: config

    - name: Save output to backup directory
      copy:
        content: "{{ config.stdout[0] }}"
        dest: "~/IOS/backups/{{ lookup('pipe', 'date +%Y-%m-%d') }}/{{ inventory_hostname }}-{{ lookup('pipe', 'date +%Y-%m-%d') }}-config.txt"

    - name: Save running config 
      ios_config:
        save_when: always 

## Copy software to target device 
    - name: Check for file in flash
      ios_command:
        commands:
          - "dir flash:"
      register: flash_output
     
    - name: Debug flash output
      debug:
       var: flash_output
        
    - name: Set fact if specific file exists
      set_fact:
       file_exists: "{{ 'cat9k_iosxe.' + {{ upgrade_ios_version }} + '.SPA.bin' in flash_output.stdout[0] }}"
      when: flash_output.stdout | length > 0  # Ensure there is output before checking

    - name: Debug upgrade_ios_version
      debug:
        msg: "Upgrade IOS Version is {{ upgrade_ios_version }}"
    
    - name: Run specific command if file does not exist
      net_put:
       src: "/IOS/cat9k_iosxe.{{ upgrade_ios_version }}.SPA.bin"
       protocol: scp
       dest: "flash:/cat9k_iosxe.{{ upgrade_ios_version }}.SPA.bin"
       timeout: 900
      when: not file_exists | default(false)

## Change the Boot Variable to the new image 
    - name: Change Boot Variable to new image 
      ios_config: 
        commands: 
         - "boot system flash:'cat9k_iosxe.' + upgrade_ios_version + '.SPA.bin'"
        save_when: always 

## Reload the device 
    - name: Reload the Device 
      cli_command: 
        command: reload
        prompt: 
        - confirm
        answer: 
        - 'y'
         
## Wait for Reachability to the device 
    - name: Wait for device to come back online
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        delay: 90
        timeout: 900
      delegate_to: localhost

## Check current image 
    - name: Check Image Version      
      ios_facts:

    - debug: 
       msg: 
       - "Current version is {{ ansible_net_version }}"

    - name: ASSERT THAT THE IOS VERSION IS CORRECT
      assert:
       that:
       - upgrade_ios_version == ansible_net_version
    - debug: 
       msg: 
       - "Software Upgrade has been completed"
