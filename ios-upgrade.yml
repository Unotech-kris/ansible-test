---
# Ansible Playbook to upgrade Cisco IOS 

- name: Upgrade CISCO IOS 
  hosts: 192.168.99.53
  vars: 
    upgrade_ios_version: 17.13.01

  tasks:
    - name: CHECK CURRENT VERSION
      ios_facts:

    - debug: 
        msg: 
        - "Current version is {{ ansible_net_version }}"
        - "Upgrade image is 17.13.01"

    - debug: 
        msg: 
        - "Image is not compliant and will be upgraded"
      when: ansible_net_version != upgrade_ios_version

## Create backup folder for today 

    - name: Get ansible date/time facts
      setup:
        filter: "ansible_date_time"
        gather_subset: "!all"

    - name: Store DTG as fact
      set_fact:
        DTG: "{{ ansible_date_time.date }}"

    - name: Create Directory {{hosts}}.{{DTG}}
      file:
       path: ~/IOS/backups/{{hosts}}.{{DTG}}
       state: directory
      run_once: true

## Backup Running Config 

    - name: Backup Running Config  
      ios_command:
        commands: show run  
      register: config

    - name: Save output to ~/IOS/backups/
      copy:
        content: "{{config.stdout[0]}}"
        dest: "~/IOS/backups/{{hostvars.localhost.DTG}}/{{ inventory_hostname }}-{{hostvars.localhost.DTG}}-config.txt"

## SAVE the Running Config 

    - name: Save running config 
      ios_config:
        save_when: always 

## Copy software to target device 

    - name: Copy Image // This could take up to 10 minutes
      net_put:
        src: "/IOS/cat9k_iosxe.17.13.01.SPA.bin"
        protocol: scp
        dest: "flash:/cat9k_iosxe.17.13.01.SPA.bin"
      vars: 
        ansible_command_timeout: 600

## Change the Boot Variable to the new image 

    - name: Change Boot Variable to new image 
      ios_config: 
        commands: 
        - "boot system flash:cat9k_iosxe.17.13.01.SPA.bin"
        save_when: always 

## Reload the device 

    - name: Reload the Device 
      cli_command: 
        command: reload
        prompt: 
        - confirm
        answer: 
        - 'y'
         
## Wait for Reachability to the device 

    - name: Wait for device to come back online
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        delay: 90
        timeout: 900
      delegate_to: localhost

## Check current image 

    - name: Check Image Version      
      ios_facts:

    - debug: 
        msg: 
        - "Current version is {{ ansible_net_version }}"

    - name: ASSERT THAT THE IOS VERSION IS CORRECT

      vars: 
        upgrade_ios_version: 17.13.01

      assert:
        that:
        - upgrade_ios_version == ansible_net_version
    - debug: 
        msg: 
        - "Software Upgrade has been completed"
